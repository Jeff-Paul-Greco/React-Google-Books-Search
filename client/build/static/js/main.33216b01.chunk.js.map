{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.js","utils/API.js","components/Grid/index.js","components/Search/index.js","pages/Search.js","components/Save/index.js","pages/Save.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","Nav","href","API","searchBooks","query","axios","get","getBooks","getBook","id","saveBook","savedBooks","post","deleteBook","delete","Container","fluid","concat","Row","_ref2","Col","_ref3","size","float","split","map","join","Search","props","books","book","index","key","title","onClick","event","handleSaveButton","link","target","rel","author","_id","src","image","alt","description","state","search","message","handleInputChange","_this","setState","value","handleFormSubmit","preventDefault","then","res","data","items","Error","results","result","volumeInfo","authors","imageLinks","thumbnail","infoLink","error","catch","err","filter","alert","console","log","components_Nav","components_Jumbotron","type","onChange","this","components_Search","Component","Save","handleDeleteButton","componentDidMount","_this2","components_Save","NoMatch","role","aria-label","App","BrowserRouter","Switch","Route","exact","path","component","Saved","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33216b01.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n    return (\r\n        <div\r\n            style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n            className=\"jumbotron\"\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\nfunction Nav() {\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n\r\n            <span className=\"navbar-brand\">\r\n                Google Books Search\r\n        </span>\r\n\r\n            <a className=\"nav-link btn btn-success\" href='/'>Search</a>\r\n            <a className=\"nav-link btn btn-dark\" href='/saved'>Saved</a>\r\n\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default Nav;","\r\nimport axios from \"axios\"\r\n\r\nexport default {\r\n\r\n    searchBooks: function (query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\r\n    },\r\n\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n\r\n    getBook: function (id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n\r\n    saveBook: function (savedBooks) {\r\n        return axios.post(\"/api/books\", savedBooks);\r\n    },\r\n\r\n    deleteBook: function (id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, float, children }) {\r\n    return (\r\n        <div\r\n            className={(float ? (`float-${float} `) : \"\") + size\r\n                .split(\" \")\r\n                .map(size => \"col-\" + size)\r\n                .join(\" \")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Row, Col } from \"../Grid\"\r\n\r\nconst Search = props => {\r\n    return (\r\n\r\n        <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n\r\n                <h3>Search Results</h3>\r\n\r\n                {props.books.map((book, index) => {\r\n\r\n                    return (\r\n\r\n                        <li className=\"list-group-item\" key={index}>\r\n\r\n                            <Row>\r\n\r\n                                <h2>{book.title}</h2>\r\n\r\n                                <div className=\"float-right\">\r\n\r\n                                    <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSaveButton(event)}>\r\n                                        Save </button>\r\n\r\n                                    <a href={book.link} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                                        <button className=\"viewBook btn btn-success\">\r\n                                            View </button>\r\n                                    </a>\r\n\r\n                                </div>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <h3 className=\"bookAuthor\">By: {book.author ? book.author.join(\", \") : book.author} </h3>\r\n                            </Row>\r\n\r\n                            <Row id={book.title + \"Card\"} key={book._id}>\r\n\r\n                                <Col size=\"3\" className=\"bookImage\">\r\n                                    <img src={book.image} alt={book.title} />\r\n                                </Col>\r\n\r\n                                <Col size=\"9\" className=\"bookInfo\">\r\n\r\n                                    <Row>\r\n                                        <p className=\"bookDescription\">{book.description}</p>\r\n                                    </Row>\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </li>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Nav from \"../components/Nav\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport SearchResult from \"../components/Search\"\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        search: \"\",\r\n        message: \"\",\r\n        books: []\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value });\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n\r\n        event.preventDefault();\r\n\r\n        API.searchBooks(this.state.search)\r\n\r\n            .then(res => {\r\n\r\n                if (res.data.items === \"error\") {\r\n\r\n                    throw new Error(res.data.items);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    let results = res.data.items;\r\n\r\n                    results = results.map(result => {\r\n\r\n                        result = {\r\n\r\n                            key: result.id,\r\n                            id: result.id,\r\n                            title: result.volumeInfo.title,\r\n                            author: result.volumeInfo.authors,\r\n                            description: result.volumeInfo.description,\r\n                            image: result.volumeInfo.imageLinks.thumbnail,\r\n                            link: result.volumeInfo.infoLink\r\n\r\n                        }\r\n\r\n                        return result;\r\n\r\n                    })\r\n\r\n                    this.setState({ books: results, error: \"\" })\r\n\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n    handleSaveButton = event => {\r\n\r\n        event.preventDefault();\r\n\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n\r\n        savedBooks = savedBooks[0];\r\n\r\n        API.saveBook(savedBooks)\r\n            .then(res => this.setState({ message: alert(`Added ${res.data.title}!`) }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Nav />\r\n\r\n                <Container fluid>\r\n\r\n                    <Row>\r\n\r\n                        <Col size=\"md-10\">\r\n\r\n                            <Jumbotron>\r\n                                <h1>Google Books Search</h1>\r\n                                <h3>Search for and Save Books</h3>\r\n                            </Jumbotron>\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n                <Container fluid>\r\n\r\n                    <form className=\"border\">\r\n\r\n                        <Row fluid>\r\n\r\n                            <Col size=\"md-12\">\r\n\r\n                                <h3>Book Search</h3>\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row fluid>\r\n\r\n                            <Col size=\"md-12\">\r\n\r\n                                <input type=\"text\" className=\"form-control\" onChange={this.handleInputChange} />\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row fluid>\r\n                            <Col size=\"md-2\" float=\"right my-2\">\r\n                                <button type=\"submit\" className=\"form-control btn btn-primary float-right\" onClick={this.handleFormSubmit}>Search</button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </form>\r\n\r\n                </Container>\r\n\r\n                <Container fluid>\r\n\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <SearchResult books={this.state.books} handleSaveButton={this.handleSaveButton} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { Row, Col } from \"../Grid\"\r\n\r\nconst Save = props => {\r\n\r\n    return (\r\n\r\n        <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n\r\n                <div>\r\n\r\n                    <h3>Saved Books</h3>\r\n\r\n                    {props.books.map((book, index) => {\r\n\r\n                        return (\r\n\r\n                            <li className=\"list-group-item\" key={index}>\r\n\r\n                                <Row>\r\n\r\n                                    <h3>{book.title}</h3>\r\n\r\n                                    <div className=\"float-right\">\r\n\r\n                                        <button className=\"saveBook btn btn-danger\" onClick={() => props.handleDeleteButton(book._id)}>\r\n                                            Delete </button>\r\n\r\n                                        <a href={book.link} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                                            <button className=\"viewBook btn btn-success\">\r\n                                                View </button>\r\n                                        </a>\r\n\r\n                                    </div>\r\n\r\n                                </Row>\r\n\r\n                                <Row>\r\n\r\n                                    <h3 className=\"bookAuthor\">By: {book.author.join(\", \")}</h3>\r\n\r\n                                </Row>\r\n\r\n                                <Row id={book.title + \"Card\"} key={book._id}>\r\n\r\n                                    <Col size=\"3\" className=\"bookImage\">\r\n\r\n                                        <img src={book.image} alt={book.title} />\r\n\r\n                                    </Col>\r\n\r\n                                    <Col size=\"9\" className=\"bookInfo\">\r\n\r\n                                        <Row>\r\n                                            <p className=\"bookDescription\">{book.description}</p>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Save","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Nav from \"../components/Nav\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport SaveResults from \"../components/Save\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Save extends Component {\r\n\r\n    state = {\r\n        books: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        API.getBooks()\r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({ books: res.data })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleDeleteButton = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Nav />\r\n\r\n                <Container fluid>\r\n\r\n                    <Row>\r\n\r\n                        <Col size=\"md-12\">\r\n\r\n                            <Jumbotron>\r\n                                <h1>Google Books Search</h1>\r\n                                <h3>Search for and Save Books</h3>\r\n                            </Jumbotron>\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n                <Container fluid>\r\n\r\n                    <SaveResults\r\n                        books={this.state.books}\r\n                        handleDeleteButton={this.handleDeleteButton}\r\n                    />\r\n\r\n                </Container>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Save;","\r\nimport React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Save\";\nimport NoMatch from \"./pages/NoMatch\";\n\nfunction App() {\n\n  return (\n\n    <Router>\n\n      <div>\n\n        <Switch>\n\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved/\" component={Saved} />\n          <Route component={NoMatch} />\n\n        </Switch>\n\n      </div>\n\n    </Router>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}